{"version":3,"file":"static/js/914.c724db60.chunk.js","mappings":"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","sources":["webpack://vocab-builder/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","components/ProgressBar/ProgressBar.jsx","webpack://vocab-builder/./src/components/DoneModal/DoneModal.module.css?8ba9","components/DoneModal/DoneModal.jsx","webpack://vocab-builder/./src/components/TrainingRoom/TrainingRoom.module.css?5fe0","components/TrainingRoom/TrainingRoom.jsx","webpack://vocab-builder/./src/components/NoTasks/NoTasks.module.css?2137","components/NoTasks/NoTasks.jsx","pages/TrainingPage/TrainingPage.jsx","redux/word/selectors.js","webpack://vocab-builder/./src/components/ProgressBar/ProgressBar.module.css?d7bc"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalDrop\":\"Modal_modalDrop__FlhnE\",\"modalWrap\":\"Modal_modalWrap__3Iud2\",\"btnClose\":\"Modal_btnClose__qOilm\",\"iconClose\":\"Modal_iconClose__nZqE3\"};","import ReactDOM from \"react-dom\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport css from \"./Modal.module.css\";\r\nimport svg from \"../../assets/icon.svg\";\r\n\r\nconst Modal = ({ onClose, children, className }) => {\r\n  const targetElement = document.getElementById(\"modal-root\");\r\n  const backdrop = useRef();\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (event.target === backdrop.current) {\r\n      onClose();\r\n    }\r\n    document.body.style.overflow = \"\";\r\n    document.body.style.position = \"\";\r\n    event.stopPropagation();\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === \"Escape\") {\r\n      document.body.style.overflow = \"\";\r\n      document.body.style.position = \"\";\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const eventHandler = (e) => handleKeyDown(e);\r\n    document.addEventListener(\"keydown\", eventHandler);\r\n    document.body.style.overflow = \"hidden\";\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", eventHandler);\r\n    };\r\n  }, []);\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={css.modalDrop} onClick={handleClickOutside} ref={backdrop}>\r\n      <div className={`${css.modalWrap} ${className}`}>\r\n        <button className={css.btnClose} onClick={onClose}>\r\n          <svg className={css.iconClose}>\r\n            <use href={`${svg}#icon-close`} />\r\n          </svg>\r\n        </button>\r\n        {children}\r\n      </div>\r\n    </div>,\r\n    targetElement\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { CircularProgress, Box } from \"@mui/material\";\r\nimport css from \"./ProgressBar.module.css\";\r\n\r\nconst ProgressBar = ({ progress, pageType, classWrap, classBox, count }) => {\r\n  const isTable = pageType === \"table\";\r\n  const size = isTable ? 24 : 44;\r\n\r\n  return (\r\n    <div className={classWrap}>\r\n      {isTable ? (\r\n        <span className={css.tablePrcent}>{progress}%</span>\r\n      ) : (\r\n        <span className={css.trainPrcent}>{count}</span>\r\n      )}\r\n\r\n      <Box className={classBox} sx={{ width: size, height: size }}>\r\n        <svg width={0} height={0}>\r\n          <defs>\r\n            <linearGradient id=\"my_gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n              <stop offset=\"0%\" stopColor=\"rgb(255, 255, 255)\" />\r\n              <stop offset=\"100%\" stopColor=\"#85AA9F\" />\r\n            </linearGradient>\r\n          </defs>\r\n        </svg>\r\n        <CircularProgress\r\n          variant=\"determinate\"\r\n          value={100}\r\n          size={size}\r\n          thickness={isTable ? 6 : 4}\r\n          sx={{\r\n            color: pageType === \"table\" ? \"#D4F8D3\" : \"#FFFFFF\",\r\n          }}\r\n        />\r\n        <CircularProgress\r\n          variant=\"determinate\"\r\n          value={progress}\r\n          size={size}\r\n          thickness={isTable ? 6 : 4}\r\n          sx={{\r\n            color: \"transparent\",\r\n            position: \"absolute\",\r\n            left: 0,\r\n            top: 0,\r\n            \"svg circle\": {\r\n              stroke: pageType === \"table\" ? \"#2BD627\" : \"url(#my_gradient)\",\r\n              strokeLinecap: \"round\",\r\n            },\r\n          }}\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"DoneModal_image__TL323\",\"title\":\"DoneModal_title__T48ur\",\"subtitle\":\"DoneModal_subtitle__d4b4M\",\"result\":\"DoneModal_result__BgbLP\",\"listsWrap\":\"DoneModal_listsWrap__dq+ms\",\"container\":\"DoneModal_container__lAjP9\",\"mistake\":\"DoneModal_mistake__kgStK\",\"mistakeList\":\"DoneModal_mistakeList__kTYuR\"};","import { useSelector } from \"react-redux\";\r\nimport { selectAnswer } from \"../../redux/word/selectors\";\r\nimport img1x from \"../../assets/images/open-book@1x.png\";\r\nimport img2x from \"../../assets/images/open-book@2x.png\";\r\nimport css from \"./DoneModal.module.css\";\r\n\r\nconst DoneModal = () => {\r\n  const results = useSelector(selectAnswer);\r\n\r\n  const correctResults = results.filter((word) => word.isDone);\r\n  const failResults = results.filter((word) => !word.isDone);\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <h3 className={css.title}>Well done</h3>\r\n      <div className={css.listsWrap}>\r\n        <div className={css.correct}>\r\n          <h4 className={css.subtitle}>Correct answers:</h4>\r\n          <ul>\r\n            {correctResults.map((res) => (\r\n              <li key={res._id} className={css.result}>\r\n                {res.en}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className={css.mistake}>\r\n          <h4 className={css.subtitle}>Mistakes:</h4>\r\n          <ul className={css.mistakeList}>\r\n            {failResults.map((res) => (\r\n              <li key={res._id} className={css.result}>\r\n                {res.en}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div className={css.image}>\r\n            <img\r\n              src={img1x}\r\n              srcSet={`${img1x} 1x, ${img2x} 2x`}\r\n              alt=\"open-book\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoneModal;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"answerContainer\":\"TrainingRoom_answerContainer__I2TP6\",\"inputAnswer\":\"TrainingRoom_inputAnswer__0QhM1\",\"btnNext\":\"TrainingRoom_btnNext__WNeG7\",\"iconArrow\":\"TrainingRoom_iconArrow__UH19u\",\"labelWrap\":\"TrainingRoom_labelWrap__FMTxK\",\"label\":\"TrainingRoom_label__Y87tm\",\"iconCountry\":\"TrainingRoom_iconCountry__q9rW0\",\"task\":\"TrainingRoom_task__CYKzR\",\"span\":\"TrainingRoom_span__m5ut5\",\"taskContainer\":\"TrainingRoom_taskContainer__-taIe\",\"btnsWrap\":\"TrainingRoom_btnsWrap__L9ywr\",\"btnSave\":\"TrainingRoom_btnSave__PkEAl\",\"btnCancel\":\"TrainingRoom_btnCancel__eT3et\",\"wrapProgress\":\"TrainingRoom_wrapProgress__EjLMi\",\"error\":\"TrainingRoom_error__++fPO\",\"inputContainer\":\"TrainingRoom_inputContainer__grUdz\"};","import { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { selectTasks } from \"../../redux/word/selectors\";\r\nimport { addAnswers } from \"../../redux/word/operations\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport DoneModal from \"../DoneModal/DoneModal\";\r\nimport ProgressBar from \"../ProgressBar/ProgressBar\";\r\nimport svg from \"../../assets/icon.svg\";\r\nimport css from \"./TrainingRoom.module.css\";\r\nimport style from \"../ProgressBar/ProgressBar.module.css\";\r\n\r\nconst TrainingRoom = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const tasks = useSelector(selectTasks);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\r\n  const [currentAnswer, setCurrentAnswer] = useState(\"\");\r\n  const [answers, setAnswers] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const currentTask = tasks[currentTaskIndex];\r\n  const isLastTask = currentTaskIndex === tasks.length - 1;\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const validateInput = (input) => {\r\n    const enPattern = /^[A-Za-z]+$/;\r\n    const uaPattern = /^[А-ЯІЄЇҐа-яієїґ]+$/;\r\n\r\n    if (currentTask.task === \"en\" && !enPattern.test(input)) {\r\n      return \"Please enter valid English words.\";\r\n    }\r\n    if (currentTask.task === \"ua\" && !uaPattern.test(input)) {\r\n      return \"Будь ласка, введіть слово українською.\";\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const input = e.target.value;\r\n    setCurrentAnswer(input);\r\n    const validationError = validateInput(input);\r\n    if (input.trim() !== \"\") {\r\n      setError(validationError);\r\n    } else {\r\n      setError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentAnswer.trim()) {\r\n      const newAnswer = {\r\n        _id: currentTask._id,\r\n        en: currentTask.en,\r\n        ua: currentTask.ua,\r\n        task: currentTask.task,\r\n        [currentTask.task]: currentAnswer,\r\n      };\r\n      setAnswers([...answers, newAnswer]);\r\n    }\r\n    setCurrentAnswer(\"\");\r\n    setError(\"\");\r\n    if (!isLastTask) {\r\n      setCurrentTaskIndex(currentTaskIndex + 1);\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    let newAnswers = [...answers];\r\n\r\n    if (currentAnswer.trim()) {\r\n      newAnswers.push({\r\n        _id: currentTask._id,\r\n        en: currentTask.en,\r\n        ua: currentTask.ua,\r\n        task: currentTask.task,\r\n        [currentTask.task]: currentAnswer,\r\n      });\r\n    }\r\n    if (newAnswers.length > 0 && !error) {\r\n      dispatch(addAnswers(newAnswers))\r\n        .unwrap()\r\n        .then(() => {\r\n          toast.success(\"Your answers have been saved!\");\r\n          setCurrentTaskIndex(0);\r\n          setCurrentAnswer(\"\");\r\n          setAnswers([]);\r\n          setModalOpen(true);\r\n        })\r\n        .catch((error) => {\r\n          toast.error(\r\n            error.message || \"An error occurred while saving your answers.\"\r\n          );\r\n        });\r\n    } else {\r\n      toast.info(\"No answers to save or there is an error.\");\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setAnswers([]);\r\n    setCurrentAnswer(\"\");\r\n    navigate(\"/dictionary\");\r\n  };\r\n\r\n  const progress = Math.round((answers.length / tasks.length) * 100);\r\n\r\n  return (\r\n    <div>\r\n      <div className={css.wrapProgress}>\r\n        <ProgressBar\r\n          progress={progress}\r\n          pageType=\"training\"\r\n          classWrap={style.progressWrapTrain}\r\n          classBox={style.boxTrain}\r\n          count={answers.length}\r\n        />\r\n      </div>\r\n      {currentTask && (\r\n        <div className={css.inputContainer}>\r\n          <div className={css.answerContainer}>\r\n            <input\r\n              className={css.inputAnswer}\r\n              type=\"text\"\r\n              id=\"answer\"\r\n              value={currentAnswer}\r\n              onChange={handleChange}\r\n              placeholder={\r\n                currentTask.task === \"en\"\r\n                  ? \"Enter translate\"\r\n                  : \"Введіть переклад\"\r\n              }\r\n            />\r\n            {error && <p className={css.error}>{error}</p>}\r\n            {!isLastTask && (\r\n              <button\r\n                disabled={!!error}\r\n                className={css.btnNext}\r\n                type=\"button\"\r\n                onClick={handleNext}\r\n              >\r\n                Next\r\n                <svg className={css.iconArrow}>\r\n                  <use href={`${svg}#icon-arrow-right`} />\r\n                </svg>\r\n              </button>\r\n            )}\r\n            {currentTask.task === \"en\" ? (\r\n              <div className={css.labelWrap}>\r\n                <svg className={css.iconCountry}>\r\n                  <use href={`${svg}#icon-en`} />\r\n                </svg>\r\n                <label className={css.label} htmlFor=\"answer\">\r\n                  English\r\n                </label>\r\n              </div>\r\n            ) : (\r\n              <div className={css.labelWrap}>\r\n                <svg className={css.iconCountry}>\r\n                  <use href={`${svg}#icon-ukraine`} />\r\n                </svg>\r\n                <label className={css.label} htmlFor=\"answer\">\r\n                  Ukrainian\r\n                </label>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className={css.taskContainer}>\r\n            <p className={css.task}>\r\n              {currentTask.task === \"en\" ? currentTask.ua : currentTask.en}\r\n            </p>\r\n            {currentTask.task === \"ua\" ? (\r\n              <div className={css.labelWrap}>\r\n                <svg className={css.iconCountry}>\r\n                  <use href={`${svg}#icon-en`} />\r\n                </svg>\r\n                <span className={css.span}>English</span>\r\n              </div>\r\n            ) : (\r\n              <div className={css.labelWrap}>\r\n                <svg className={css.iconCountry}>\r\n                  <use href={`${svg}#icon-ukraine`} />\r\n                </svg>\r\n                <span className={css.span}>Ukrainian</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className={css.btnsWrap}>\r\n        <button className={css.btnSave} type=\"submit\" onClick={handleSave}>\r\n          Save\r\n        </button>\r\n        <button className={css.btnCancel} type=\"button\" onClick={handleCancel}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n      {modalOpen && (\r\n        <Modal onClose={closeModal}>\r\n          <DoneModal />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrainingRoom;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"NoTasks_container__LNOxV\",\"image\":\"NoTasks_image__9arXP\",\"contentWrap\":\"NoTasks_contentWrap__ihqWx\",\"title\":\"NoTasks_title__k7Zxq\",\"text\":\"NoTasks_text__4DHLX\",\"btnsWrap\":\"NoTasks_btnsWrap__YWhxQ\",\"linkAdd\":\"NoTasks_linkAdd__eK5fR\",\"btnCancel\":\"NoTasks_btnCancel__-gFAw\"};","import { Link, useNavigate } from \"react-router-dom\";\r\nimport css from \"./NoTasks.module.css\";\r\nimport img1x from \"../../assets/images/report@1x.png\";\r\nimport img2x from \"../../assets/images/report@2x.png\";\r\n\r\nconst NoTasks = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <div className={css.image}>\r\n        <img src={img1x} srcSet={`${img1x} 1x, ${img2x} 2x`} alt=\"report\" />\r\n      </div>\r\n      <div className={css.contentWrap}>\r\n        <h3 className={css.title}>\r\n          You don't have a single word to learn right now.{\" \"}\r\n        </h3>\r\n        <p className={css.text}>\r\n          Please create or add a word to start the workout. We want to improve\r\n          your vocabulary and develop your knowledge, so please share the words\r\n          you are interested in adding to your study.\r\n        </p>\r\n\r\n        <div className={css.btnsWrap}>\r\n          <Link className={css.linkAdd} to=\"/dictionary\">\r\n            Add word\r\n          </Link>\r\n          <button\r\n            className={css.btnCancel}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              navigate(\"/dictionary\");\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoTasks;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { getTasks } from \"../../redux/word/operations\";\r\nimport { selectTasks } from \"../../redux/word/selectors\";\r\nimport TrainingRoom from \"../../components/TrainingRoom/TrainingRoom\";\r\nimport NoTasks from \"../../components/NoTasks/NoTasks\";\r\n\r\nconst TrainingPage = () => {\r\n  const dispatch = useDispatch();\r\n  const tasks = useSelector(selectTasks);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTasks());\r\n  }, [dispatch]);\r\n\r\n  return <>{tasks.length === 0 ? <NoTasks /> : <TrainingRoom />}</>;\r\n};\r\n\r\nexport default TrainingPage;\r\n","export const selectCategories = (state) => state.words.categories;\r\nexport const selectWords = (state) => state.words.words;\r\nexport const selectOwnWords = (state) => state.words.ownWords;\r\nexport const selectTotalPages = (state) => state.words.totalPages;\r\nexport const selectError = (state) => state.words.error;\r\nexport const selectIsLoading = (state) => state.words.isLoading;\r\nexport const selectStatistics = (state) => state.words.statistics;\r\nexport const selectTasks = (state) => state.words.tasks;\r\nexport const selectAnswer = (state) => state.words.result;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"progressWrapTable\":\"ProgressBar_progressWrapTable__JdnC7\",\"progressWrapTrain\":\"ProgressBar_progressWrapTrain__pc96x\",\"boxTable\":\"ProgressBar_boxTable__k7NF1\",\"boxTrain\":\"ProgressBar_boxTrain__umwOE\",\"trainPrcent\":\"ProgressBar_trainPrcent__EQ0KO\",\"tablePrcent\":\"ProgressBar_tablePrcent__LmfRr\"};"],"names":["_ref","onClose","children","className","targetElement","document","getElementById","backdrop","useRef","useEffect","eventHandler","e","key","body","style","overflow","position","addEventListener","removeEventListener","ReactDOM","_jsx","css","onClick","event","target","current","stopPropagation","ref","_jsxs","concat","href","svg","progress","pageType","classWrap","classBox","count","isTable","size","tablePrcent","trainPrcent","Box","sx","width","height","id","x1","y1","x2","y2","offset","stopColor","CircularProgress","variant","value","thickness","color","left","top","stroke","strokeLinecap","DoneModal","results","useSelector","selectAnswer","correctResults","filter","word","isDone","failResults","container","title","listsWrap","correct","subtitle","map","res","result","en","_id","mistake","mistakeList","image","src","img1x","srcSet","img2x","alt","TrainingRoom","dispatch","useDispatch","navigate","useNavigate","tasks","selectTasks","modalOpen","setModalOpen","useState","currentTaskIndex","setCurrentTaskIndex","currentAnswer","setCurrentAnswer","answers","setAnswers","error","setError","currentTask","isLastTask","length","Math","round","ProgressBar","progressWrapTrain","boxTrain","type","onChange","input","validationError","task","test","validateInput","trim","placeholder","disabled","handleNext","newAnswer","ua","htmlFor","handleSave","newAnswers","push","addAnswers","unwrap","then","toast","success","catch","message","info","handleCancel","Modal","closeModal","NoTasks","Link","to","TrainingPage","getTasks","_Fragment","selectCategories","state","words","categories","selectWords","selectOwnWords","ownWords","selectTotalPages","totalPages","selectStatistics","statistics"],"sourceRoot":""}