{"version":3,"file":"static/js/881.ab077e19.chunk.js","mappings":"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","sources":["webpack://vocab-builder/./src/components/MainImage/MainImage.module.css?bc03","components/MainImage/MainImage.jsx","webpack://vocab-builder/./src/components/auth/Login/LoginForm.module.css?225f","components/auth/Login/LoginForm.jsx","webpack://vocab-builder/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MainImage_container__k7Wzl\",\"imgThumb\":\"MainImage_imgThumb__zr1r1\",\"mainImg\":\"MainImage_mainImg__Zm5zG\",\"subtitle\":\"MainImage_subtitle__An6cr\",\"show\":\"MainImage_show__Cju6z\"};","import img1x from \"../../assets/images/illustration@1x.png\";\r\nimport img2x from \"../../assets/images/illustration@2x.png\";\r\nimport css from \"./MainImage.module.css\";\r\n\r\nconst MainImage = ({ pageType }) => {\r\n  return (\r\n    <div className={css.container}>\r\n      <div className={css.imgThumb}>\r\n        <img\r\n          className={css.mainImg}\r\n          src={img1x}\r\n          srcSet={`${img1x} 1x, ${img2x} 2x`}\r\n          alt=\"young-couple-sitting-on-the-floor-and-reading-books\"\r\n        />\r\n      </div>\r\n      <span\r\n        className={`${css.subtitle} ${pageType === \"login\" ? css.show : \"\"}`}\r\n      >\r\n        Word · Translation · Grammar · Progress\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainImage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"containerForm\":\"LoginForm_containerForm__A2mSV\",\"titleForm\":\"LoginForm_titleForm__V24OR\",\"subtitle\":\"LoginForm_subtitle__DkVFV\",\"hiddenLabel\":\"LoginForm_hiddenLabel__ZDX2e\",\"loginForm\":\"LoginForm_loginForm__rJFw0\",\"containerInput\":\"LoginForm_containerInput__YQDnQ\",\"input\":\"LoginForm_input__+1+CQ\",\"iconEye\":\"LoginForm_iconEye__Vpccp\",\"btnSubmit\":\"LoginForm_btnSubmit__h+eS2\",\"validationContainer\":\"LoginForm_validationContainer__+sAuq\",\"errorMessage\":\"LoginForm_errorMessage__4Sa40\",\"successMessage\":\"LoginForm_successMessage__Nn1Wh\",\"error\":\"LoginForm_error__A4kU-\",\"valid\":\"LoginForm_valid__8Zw3C\",\"iconInput\":\"LoginForm_iconInput__CWDPa\",\"linkContainer\":\"LoginForm_linkContainer__T3AuP\",\"link\":\"LoginForm_link__NKwWj\"};","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signinThunk } from \"../../../redux/auth/operation.js\";\r\nimport css from \"./LoginForm.module.css\";\r\nimport svg from \"../../../assets/icon.svg\";\r\n\r\nconst loginSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .required(\"Email is required\")\r\n    .matches(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, \"Invalid email format\"),\r\n  password: Yup.string()\r\n    .required(\"Password is required\")\r\n    .matches(\r\n      /^(?=.*[a-zA-Z]{6})(?=.*\\d)[a-zA-Z\\d]{7}$/,\r\n      \"Password must contain  six English letters and one number\"\r\n    ),\r\n});\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const togglePassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, dirtyFields },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    resolver: yupResolver(loginSchema),\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(signinThunk(data));\r\n  };\r\n\r\n  return (\r\n    <div className={css.containerForm}>\r\n      <h4 className={css.titleForm}>Login</h4>\r\n      <p className={css.subtitle}>\r\n        Please enter your login details to continue using our service:\r\n      </p>\r\n      <form className={css.loginForm} onSubmit={handleSubmit(onSubmit)}>\r\n        <div className={css.containerInput}>\r\n          <label className={css.hiddenLabel} htmlFor=\"email\">\r\n            Enter your email\r\n          </label>\r\n          <input\r\n            className={`${css.input} ${\r\n              errors.email ? css.error : dirtyFields.email ? css.valid : \"\"\r\n            }`}\r\n            {...register(\"email\")}\r\n            id=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n          />\r\n          {(dirtyFields.email || errors.email) && (\r\n            <div className={css.validationContainer}>\r\n              <svg className={css.iconInput}>\r\n                <use\r\n                  href={`${svg}#${\r\n                    errors.email ? \"icon-error\" : \"icon-success\"\r\n                  }`}\r\n                />\r\n              </svg>\r\n              <span\r\n                className={errors.email ? css.errorMessage : css.successMessage}\r\n              >\r\n                {errors.email?.message || \"Success email\"}\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className={css.containerInput}>\r\n          <label className={css.hiddenLabel} htmlFor=\"password\">\r\n            Enter your password\r\n          </label>\r\n          <input\r\n            className={`${css.input} ${\r\n              errors.password\r\n                ? css.error\r\n                : dirtyFields.password\r\n                ? css.valid\r\n                : \"\"\r\n            }`}\r\n            id=\"password\"\r\n            {...register(\"password\")}\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            placeholder=\"Password\"\r\n          />\r\n          <svg onClick={togglePassword} className={css.iconEye}>\r\n            <use\r\n              href={showPassword ? `${svg}#icon-eye` : `${svg}#icon-eye-off`}\r\n            ></use>\r\n          </svg>\r\n          {(dirtyFields.password || errors.password) && (\r\n            <div className={css.validationContainer}>\r\n              <svg className={css.iconInput}>\r\n                <use\r\n                  href={`${svg}#${\r\n                    errors.password ? \"icon-error\" : \"icon-success\"\r\n                  }`}\r\n                />\r\n              </svg>\r\n              <span\r\n                className={\r\n                  errors.password ? css.errorMessage : css.successMessage\r\n                }\r\n              >\r\n                {errors.password?.message || \"Success password\"}\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <button className={css.btnSubmit} type=\"submit\">\r\n          Login\r\n        </button>\r\n      </form>\r\n      <div className={css.linkContainer}>\r\n        <Link className={css.link} to=\"/register\">\r\n          Register\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"sectionWrap\":\"LoginPage_sectionWrap__ShlY6\",\"spot\":\"LoginPage_spot__gbru-\"};","import LoginForm from \"../../components/auth/Login/LoginForm\";\r\nimport MainImage from \"../../components/MainImage/MainImage\";\r\nimport css from \"./LoginPage.module.css\";\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <section className={css.sectionWrap}>\r\n      <MainImage pageType=\"login\" />\r\n      <LoginForm />\r\n      <div className={css.spot}></div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["_ref","pageType","_jsxs","className","css","children","_jsx","src","img1x","srcSet","concat","img2x","alt","loginSchema","Yup","shape","email","required","matches","password","LoginForm","_errors$email","_errors$password","dispatch","useDispatch","showPassword","setShowPassword","useState","register","handleSubmit","formState","errors","dirtyFields","useForm","mode","resolver","yupResolver","onSubmit","data","signinThunk","htmlFor","id","type","placeholder","href","svg","message","onClick","togglePassword","Link","to","LoginPage","MainImage"],"sourceRoot":""}