{"version":3,"file":"static/js/789.6ca216ff.chunk.js","mappings":"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","sources":["webpack://vocab-builder/./src/components/MainImage/MainImage.module.css?bc03","components/MainImage/MainImage.jsx","webpack://vocab-builder/./src/components/auth/Register/RegisterForm.module.css?aab7","components/auth/Register/RegisterForm.jsx","webpack://vocab-builder/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MainImage_container__k7Wzl\",\"imgThumb\":\"MainImage_imgThumb__zr1r1\",\"mainImg\":\"MainImage_mainImg__Zm5zG\",\"subtitle\":\"MainImage_subtitle__An6cr\",\"show\":\"MainImage_show__Cju6z\"};","import img1x from \"../../assets/images/illustration@1x.png\";\r\nimport img2x from \"../../assets/images/illustration@2x.png\";\r\nimport css from \"./MainImage.module.css\";\r\n\r\nconst MainImage = ({ pageType }) => {\r\n  return (\r\n    <div className={css.container}>\r\n      <div className={css.imgThumb}>\r\n        <img\r\n          className={css.mainImg}\r\n          src={img1x}\r\n          srcSet={`${img1x} 1x, ${img2x} 2x`}\r\n          alt=\"young-couple-sitting-on-the-floor-and-reading-books\"\r\n        />\r\n      </div>\r\n      <span\r\n        className={`${css.subtitle} ${pageType === \"login\" ? css.show : \"\"}`}\r\n      >\r\n        Word · Translation · Grammar · Progress\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainImage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"containerForm\":\"RegisterForm_containerForm__KGSBc\",\"titleForm\":\"RegisterForm_titleForm__RKWGv\",\"subtitle\":\"RegisterForm_subtitle__cPWt1\",\"hiddenLabel\":\"RegisterForm_hiddenLabel__u9Tht\",\"registerForm\":\"RegisterForm_registerForm__tcP13\",\"containerInput\":\"RegisterForm_containerInput__Gib4L\",\"input\":\"RegisterForm_input__AT1VY\",\"iconEye\":\"RegisterForm_iconEye__0IZ86\",\"btnSubmit\":\"RegisterForm_btnSubmit__FHGtu\",\"validationContainer\":\"RegisterForm_validationContainer__dmDY2\",\"errorMessage\":\"RegisterForm_errorMessage__sCvQ-\",\"successMessage\":\"RegisterForm_successMessage__U560s\",\"error\":\"RegisterForm_error__oUP3b\",\"valid\":\"RegisterForm_valid__ttarR\",\"iconInput\":\"RegisterForm_iconInput__P60JY\",\"linkContainer\":\"RegisterForm_linkContainer__tKubn\",\"link\":\"RegisterForm_link__wIDkJ\"};","import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signupThunk } from \"../../../redux/auth/operation.js\";\r\nimport svg from \"../../../assets/icon.svg\";\r\nimport css from \"./RegisterForm.module.css\";\r\n\r\nconst registerSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .required(\"Name is required\")\r\n    .min(2, \"Too Short!\")\r\n    .max(15, \"Too Long!\"),\r\n  email: Yup.string()\r\n    .required(\"Email is required\")\r\n    .matches(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, \"Invalid email format\"),\r\n  password: Yup.string()\r\n    .required(\"Password is required\")\r\n    .matches(\r\n      /^(?=.*[a-zA-Z]{6})(?=.*\\d)[a-zA-Z\\d]{7}$/,\r\n      \"Password must contain  six English letters and one number\"\r\n    ),\r\n});\r\n\r\nconst RegisterForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const togglePassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, dirtyFields },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    resolver: yupResolver(registerSchema),\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(signupThunk(data));\r\n  };\r\n\r\n  return (\r\n    <div className={css.containerForm}>\r\n      <h4 className={css.titleForm}>Register</h4>\r\n      <p className={css.subtitle}>\r\n        To start using our services, please fill out the registration form\r\n        below. All fields are mandatory:\r\n      </p>\r\n      <form className={css.registerForm} onSubmit={handleSubmit(onSubmit)}>\r\n        <div className={css.containerInput}>\r\n          <label className={css.hiddenLabel} htmlFor=\"name\">\r\n            Enter your name\r\n          </label>\r\n          <input\r\n            className={`${css.input} ${\r\n              errors.name ? css.error : dirtyFields.name ? css.valid : \"\"\r\n            }`}\r\n            id=\"name\"\r\n            {...register(\"name\")}\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n          />\r\n          {(dirtyFields.name || errors.name) && (\r\n            <div className={css.validationContainer}>\r\n              <svg className={css.iconInput}>\r\n                <use\r\n                  href={`${svg}#${errors.name ? \"icon-error\" : \"icon-success\"}`}\r\n                />\r\n              </svg>\r\n              <span\r\n                className={errors.name ? css.errorMessage : css.successMessage}\r\n              >\r\n                {errors.name?.message || \"Success name\"}\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className={css.containerInput}>\r\n          <label className={css.hiddenLabel} htmlFor=\"email\">\r\n            Enter your email\r\n          </label>\r\n          <input\r\n            className={`${css.input} ${\r\n              errors.email ? css.error : dirtyFields.email ? css.valid : \"\"\r\n            }`}\r\n            {...register(\"email\")}\r\n            id=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n          />\r\n          {(dirtyFields.email || errors.email) && (\r\n            <div className={css.validationContainer}>\r\n              <svg className={css.iconInput}>\r\n                <use\r\n                  href={`${svg}#${\r\n                    errors.email ? \"icon-error\" : \"icon-success\"\r\n                  }`}\r\n                />\r\n              </svg>\r\n              <span\r\n                className={errors.email ? css.errorMessage : css.successMessage}\r\n              >\r\n                {errors.email?.message || \"Success email\"}\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className={css.containerInput}>\r\n          <label className={css.hiddenLabel} htmlFor=\"password\">\r\n            Create password\r\n          </label>\r\n          <input\r\n            className={`${css.input} ${\r\n              errors.password\r\n                ? css.error\r\n                : dirtyFields.password\r\n                ? css.valid\r\n                : \"\"\r\n            }`}\r\n            {...register(\"password\")}\r\n            id=\"password\"\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            placeholder=\"Password\"\r\n          />\r\n          <svg onClick={togglePassword} className={css.iconEye}>\r\n            <use\r\n              href={showPassword ? `${svg}#icon-eye` : `${svg}#icon-eye-off`}\r\n            ></use>\r\n          </svg>\r\n          {(dirtyFields.password || errors.password) && (\r\n            <div className={css.validationContainer}>\r\n              <svg className={css.iconInput}>\r\n                <use\r\n                  href={`${svg}#${\r\n                    errors.password ? \"icon-error\" : \"icon-success\"\r\n                  }`}\r\n                />\r\n              </svg>\r\n              <span\r\n                className={\r\n                  errors.password ? css.errorMessage : css.successMessage\r\n                }\r\n              >\r\n                {errors.password?.message || \"Success password\"}\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <button className={css.btnSubmit} type=\"submit\">\r\n          Register\r\n        </button>\r\n      </form>\r\n\r\n      <div className={css.linkContainer}>\r\n        <Link className={css.link} to=\"/login\">\r\n          Login\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"sectionWrap\":\"RegisterPage_sectionWrap__MTTia\",\"spot\":\"RegisterPage_spot__On7iW\"};","import RegisterForm from \"../../components/auth/Register/RegisterForm\";\r\nimport MainImage from \"../../components/MainImage/MainImage\";\r\nimport css from \"./RegisterPage.module.css\";\r\n\r\nconst RegisterPage = () => {\r\n  return (\r\n    <section className={css.sectionWrap}>\r\n      <MainImage />\r\n      <RegisterForm />\r\n      <div className={css.spot}></div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"names":["_ref","pageType","_jsxs","className","css","children","_jsx","src","img1x","srcSet","concat","img2x","alt","registerSchema","Yup","shape","name","required","min","max","email","matches","password","RegisterForm","_errors$name","_errors$email","_errors$password","dispatch","useDispatch","showPassword","setShowPassword","useState","register","handleSubmit","formState","errors","dirtyFields","useForm","mode","resolver","yupResolver","onSubmit","data","signupThunk","htmlFor","id","type","placeholder","href","svg","message","onClick","togglePassword","Link","to","RegisterPage","MainImage"],"sourceRoot":""}