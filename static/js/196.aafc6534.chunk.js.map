{"version":3,"file":"static/js/196.aafc6534.chunk.js","mappings":"8NAQA,MAoDA,EApDsBA,KACpB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAaF,EAAAA,EAAAA,IAAYG,EAAAA,KACxBC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,IACxCC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,CACrCG,OAAQ,GACRC,SAAU,MACVC,SAAU,MAGZC,EAAAA,EAAAA,YAAU,KACRf,GACEgB,EAAAA,EAAAA,IAAc,CACZC,KAAMV,EACNK,OAAQF,EAAQE,OAChBC,SAAUH,EAAQG,SAClBC,SAAUJ,EAAQI,WAErB,GACA,CAACd,EAAUO,EAAaG,IAe3B,OACEQ,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,eAXaC,IAC1Bb,EAAWa,GACXhB,EAAe,EAAE,EASgCiB,SAAS,eACxDJ,EAAAA,EAAAA,KAACK,EAAAA,EAAU,CACTxB,MAAOA,EACPyB,cATiBC,IACrB5B,GAAS6B,EAAAA,EAAAA,IAAQD,EAAKE,KAAK,EASvBC,WAAW,eAEbV,EAAAA,EAAAA,KAACW,EAAAA,EAAe,CACdzB,YAAaA,EACbF,WAAYA,EACZ4B,aAxBoBhB,IACxBT,EAAeS,EAAK,MAyBjB,C","sources":["pages/RecommendPage/RecommendPage.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectTotalPages, selectWords } from \"../../redux/word/selectors\";\r\nimport { fetchAllWords, addWord } from \"../../redux/word/operations\";\r\nimport Dashboard from \"../../components/Dashboard/Dashboard\";\r\nimport WordsTable from \"../../components/WordsTable/WordsTable\";\r\nimport WordsPagination from \"../../components/WordsPagination/WordsPagination\";\r\n\r\nconst RecommendPage = () => {\r\n  const dispatch = useDispatch();\r\n  const words = useSelector(selectWords);\r\n  const totalPages = useSelector(selectTotalPages);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [filters, setFilters] = useState({\r\n    search: \"\",\r\n    category: \"all\",\r\n    verbType: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      fetchAllWords({\r\n        page: currentPage,\r\n        search: filters.search,\r\n        category: filters.category,\r\n        verbType: filters.verbType,\r\n      })\r\n    );\r\n  }, [dispatch, currentPage, filters]);\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const handleFilterChange = (newFilters) => {\r\n    setFilters(newFilters);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleActions = (word) => {\r\n    dispatch(addWord(word._id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dashboard onFilterChange={handleFilterChange} pageType=\"recommend\" />\r\n      <WordsTable\r\n        words={words}\r\n        handleActions={handleActions}\r\n        actionType=\"recommend\"\r\n      />\r\n      <WordsPagination\r\n        currentPage={currentPage}\r\n        totalPages={totalPages}\r\n        onPageChange={handlePageChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecommendPage;\r\n"],"names":["RecommendPage","dispatch","useDispatch","words","useSelector","selectWords","totalPages","selectTotalPages","currentPage","setCurrentPage","useState","filters","setFilters","search","category","verbType","useEffect","fetchAllWords","page","_jsxs","_Fragment","children","_jsx","Dashboard","onFilterChange","newFilters","pageType","WordsTable","handleActions","word","addWord","_id","actionType","WordsPagination","onPageChange"],"sourceRoot":""}