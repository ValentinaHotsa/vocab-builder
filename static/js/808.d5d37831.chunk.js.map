{"version":3,"file":"static/js/808.d5d37831.chunk.js","mappings":"8NAQA,MA8DA,EA9DuBA,KACrB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAaF,EAAAA,EAAAA,IAAYG,EAAAA,KACxBC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,IACxCC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,CACrCG,OAAQ,GACRC,SAAU,MACVC,SAAU,MAGZC,EAAAA,EAAAA,YAAU,KACRf,GACEgB,EAAAA,EAAAA,IAAS,CACPC,KAAMV,EACNK,OAAQF,EAAQE,OAChBC,SAAUH,EAAQG,SAClBC,SAAUJ,EAAQI,WAErB,GACA,CAACd,EAAUO,EAAaG,IAyB3B,OACEQ,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,eArBaC,IAC1Bb,EAAWa,GACXhB,EAAe,EAAE,EAmBgCiB,SAAS,gBACxDJ,EAAAA,EAAAA,KAACK,EAAAA,EAAU,CACTxB,MAAOA,EACPyB,cAnBgBA,CAACC,EAAMC,KAC3B,OAAQA,GACN,IAAK,OACHC,QAAQC,IAAI,SAADC,OAAUJ,EAAKK,MAC1B,MACF,IAAK,SACHjC,GAASkC,EAAAA,EAAAA,IAAWN,EAAKK,MAK7B,EASIJ,WAAW,gBAEbR,EAAAA,EAAAA,KAACc,EAAAA,EAAe,CACd5B,YAAaA,EACbF,WAAYA,EACZ+B,aAlCoBnB,IACxBT,EAAeS,EAAK,MAmCjB,C","sources":["pages/DictionaryPage/DictionaryPage.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectOwnWords, selectTotalPages } from \"../../redux/word/selectors\";\r\nimport { deleteWord, ownWords } from \"../../redux/word/operations\";\r\nimport Dashboard from \"../../components/Dashboard/Dashboard\";\r\nimport WordsTable from \"../../components/WordsTable/WordsTable\";\r\nimport WordsPagination from \"../../components/WordsPagination/WordsPagination\";\r\n\r\nconst DictionaryPage = () => {\r\n  const dispatch = useDispatch();\r\n  const words = useSelector(selectOwnWords);\r\n  const totalPages = useSelector(selectTotalPages);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [filters, setFilters] = useState({\r\n    search: \"\",\r\n    category: \"all\",\r\n    verbType: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      ownWords({\r\n        page: currentPage,\r\n        search: filters.search,\r\n        category: filters.category,\r\n        verbType: filters.verbType,\r\n      })\r\n    );\r\n  }, [dispatch, currentPage, filters]);\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const handleFilterChange = (newFilters) => {\r\n    setFilters(newFilters);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleActions = (word, actionType) => {\r\n    switch (actionType) {\r\n      case \"edit\":\r\n        console.log(`edit: ${word._id}`);\r\n        break;\r\n      case \"delete\":\r\n        dispatch(deleteWord(word._id));\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dashboard onFilterChange={handleFilterChange} pageType=\"dictionary\" />\r\n      <WordsTable\r\n        words={words}\r\n        handleActions={handleActions}\r\n        actionType=\"dictionary\"\r\n      />\r\n      <WordsPagination\r\n        currentPage={currentPage}\r\n        totalPages={totalPages}\r\n        onPageChange={handlePageChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DictionaryPage;\r\n"],"names":["DictionaryPage","dispatch","useDispatch","words","useSelector","selectOwnWords","totalPages","selectTotalPages","currentPage","setCurrentPage","useState","filters","setFilters","search","category","verbType","useEffect","ownWords","page","_jsxs","_Fragment","children","_jsx","Dashboard","onFilterChange","newFilters","pageType","WordsTable","handleActions","word","actionType","console","log","concat","_id","deleteWord","WordsPagination","onPageChange"],"sourceRoot":""}