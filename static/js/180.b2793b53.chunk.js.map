{"version":3,"file":"static/js/180.b2793b53.chunk.js","mappings":"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","sources":["components/Dropdown/Dropdown.jsx","webpack://vocab-builder/./src/components/Dropdown/Dropdown.module.css?9e0d","components/AddWord/AddWord.jsx","webpack://vocab-builder/./src/components/Filters/Filters.module.css?0811","components/Filters/Filters.jsx","webpack://vocab-builder/./src/components/Statistics/Statistics.module.css?da74","components/Statistics/Statistics.jsx","webpack://vocab-builder/./src/components/Dashboard/Dashboard.module.css?596c","components/Dashboard/Dashboard.jsx","webpack://vocab-builder/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","components/ProgressBar/ProgressBar.jsx","webpack://vocab-builder/./src/components/WordsPagination/WordsPagination.module.css?af4b","components/WordsPagination/WordsPagination.jsx","components/EditWord/EditWord.jsx","webpack://vocab-builder/./src/components/WordMenu/WordMenu.module.css?8c9e","components/WordMenu/WordMenu.jsx","webpack://vocab-builder/./src/components/WordsTable/WordsTable.module.css?baf8","components/WordsTable/WordsTable.jsx","hooks/useIsMobile.jsx","redux/word/selectors.js","webpack://vocab-builder/./src/components/AddWord/AddWord.module.css?660b","webpack://vocab-builder/./src/components/ProgressBar/ProgressBar.module.css?d7bc"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport svg from \"../../assets/icon.svg\";\r\n\r\nconst Dropdown = ({\r\n  defaultOption,\r\n  onSelect,\r\n  options,\r\n  className,\r\n  dropHeader,\r\n  dropList,\r\n}) => {\r\n  const dropdownRef = useRef(null);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(defaultOption);\r\n\r\n  const handleSelectOption = (option) => {\r\n    setSelectedOption(option);\r\n    setIsOpen(false);\r\n    onSelect(option);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSelectedOption(defaultOption);\r\n  }, [defaultOption]);\r\n\r\n  const upperCaseFirstLetter = (text) => {\r\n    return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\r\n  };\r\n\r\n  return (\r\n    <div ref={dropdownRef} className={className}>\r\n      <div className={dropHeader} onClick={() => setIsOpen(!isOpen)}>\r\n        <span>{upperCaseFirstLetter(selectedOption)}</span>\r\n        <svg>\r\n          <use href={`${svg}#icon-down`} />\r\n        </svg>\r\n      </div>\r\n\r\n      {isOpen && (\r\n        <div className={dropList}>\r\n          <ul>\r\n            {options.map((option) => (\r\n              <li key={option} onClick={() => handleSelectOption(option)}>\r\n                {upperCaseFirstLetter(option)}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dropdownFilter\":\"Dropdown_dropdownFilter__FUYIk\",\"headerFilter\":\"Dropdown_headerFilter__YpHiM\",\"listFilter\":\"Dropdown_listFilter__b2RNL\",\"dropdownAddWord\":\"Dropdown_dropdownAddWord__wSYu6\",\"headerAddWord\":\"Dropdown_headerAddWord__cQ-Ny\",\"listAddWord\":\"Dropdown_listAddWord__rup2Z\"};","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { selectCategories } from \"../../redux/word/selectors\";\r\nimport { createWord } from \"../../redux/word/operations\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport Dropdown from \"../Dropdown/Dropdown\";\r\nimport svg from \"../../assets/icon.svg\";\r\nimport css from \"./AddWord.module.css\";\r\nimport style from \"../Dropdown/Dropdown.module.css\";\r\n\r\nconst wordSchema = Yup.object().shape({\r\n  en: Yup.string()\r\n    .trim()\r\n    .required(\"English word is required\")\r\n    .when([\"category\", \"isIrregular\"], {\r\n      is: (category, isIrregular) =>\r\n        category === \"verb\" && isIrregular === \"true\",\r\n      then: (schema) =>\r\n        schema\r\n          .matches(\r\n            /^\\b[A-Za-z'-]+-[A-Za-z'-]+-[A-Za-z'-]+\\b$/,\r\n            \"Such data must be entered in the format I form-II form-III form\"\r\n          )\r\n          .required(\"English word is required for irregular verbs\"),\r\n      otherwise: (schema) =>\r\n        schema.matches(\r\n          /\\b[A-Za-z'-]+(?:\\s+[A-Za-z'-]+)*\\b/,\r\n          \"Invalid English format\"\r\n        ),\r\n    })\r\n    .matches(/\\b[A-Za-z'-]+(?:\\s+[A-Za-z'-]+)*\\b/, \"Invalid English format\"),\r\n  ua: Yup.string()\r\n    .trim()\r\n    .required(\"Ukrainian word is required\")\r\n    .matches(/^(?![A-Za-z])[А-ЯІЄЇҐґа-яієїʼ\\s]+$/u, \"Invalid Ukrainian format\"),\r\n  category: Yup.string().required(\"Category is required\"),\r\n  isIrregular: Yup.string().when(\"category\", {\r\n    is: (value) => value === \"verb\",\r\n    then: (schema) => schema.required(\"Irregular status is required for verbs\"),\r\n    otherwise: (schema) => schema.notRequired(),\r\n  }),\r\n});\r\n\r\nconst AddWord = () => {\r\n  const dispatch = useDispatch();\r\n  const categories = useSelector(selectCategories);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm({ mode: \"onChange\", resolver: yupResolver(wordSchema) });\r\n\r\n  const isIrregular = watch(\"isIrregular\");\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n    setSelectedCategory(null);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    const newWord = {\r\n      en: data.en,\r\n      ua: data.ua,\r\n      category: data.category,\r\n    };\r\n    if (data.category === \"verb\") {\r\n      newWord.isIrregular = data.isIrregular === \"true\";\r\n    }\r\n\r\n    dispatch(createWord(newWord))\r\n      .unwrap()\r\n      .then(() => {\r\n        closeModal();\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button type=\"button\" onClick={handleClick} className={css.button}>\r\n        Add word\r\n        <svg className={css.iconPlus}>\r\n          <use href={`${svg}#icon-plus`} />\r\n        </svg>\r\n      </button>\r\n\r\n      {modalOpen && (\r\n        <Modal onClose={closeModal}>\r\n          <div className={css.containerForm}>\r\n            <h3 className={css.title}>Add word</h3>\r\n            <p className={css.subtitle}>\r\n              Adding a new word to the dictionary is an important step in\r\n              enriching the language base and expanding the vocabulary.\r\n            </p>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div className={css.categoryWrap}>\r\n                <Dropdown\r\n                  defaultOption=\"Select a category\"\r\n                  onSelect={(option) => {\r\n                    setSelectedCategory(option);\r\n                    setValue(\"category\", option);\r\n                  }}\r\n                  options={categories.filter((cat) => cat !== \"all\")}\r\n                  className={style.dropdownAddWord}\r\n                  dropHeader={style.headerAddWord}\r\n                  dropList={style.listAddWord}\r\n                />\r\n                {errors.category && (\r\n                  <p className={css.errorCategory}>{errors.category.message}</p>\r\n                )}\r\n              </div>\r\n              <div\r\n                className={\r\n                  css.btnWrap +\r\n                  (selectedCategory === \"verb\" ? \" \" + css.visible : \"\")\r\n                }\r\n              >\r\n                <label className={css.radioContainer}>\r\n                  Regular\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"false\"\r\n                    {...register(\"isIrregular\")}\r\n                  />\r\n                  <span className={css.checkmark}></span>\r\n                </label>\r\n\r\n                <label className={css.radioContainer}>\r\n                  Irregular\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"true\"\r\n                    {...register(\"isIrregular\")}\r\n                  />\r\n                  <span className={css.checkmark}></span>\r\n                </label>\r\n                {errors.isIrregular && (\r\n                  <p className={css.errorRadio}>{errors.isIrregular.message}</p>\r\n                )}\r\n              </div>\r\n              <div\r\n                className={\r\n                  css.notificationRadio +\r\n                  (isIrregular === \"true\" ? \" \" + css.visible : \"\")\r\n                }\r\n              >\r\n                <p>\r\n                  Such data must be entered in the format I form-II form-III\r\n                  form.\r\n                </p>\r\n              </div>\r\n\r\n              <div className={css.inputContainer}>\r\n                <label htmlFor=\"ua\" className={css.label}>\r\n                  <svg className={css.countryIcon}>\r\n                    <use href={`${svg}#icon-ukraine`} />\r\n                  </svg>\r\n                  Ukrainian\r\n                </label>\r\n                <input\r\n                  {...register(\"ua\")}\r\n                  type=\"text\"\r\n                  id=\"ua\"\r\n                  className={css.input}\r\n                />\r\n                {errors.ua && (\r\n                  <p className={css.errorInput}>{errors.ua.message}</p>\r\n                )}\r\n              </div>\r\n              <div className={css.inputContainer}>\r\n                <label htmlFor=\"en\" className={css.label}>\r\n                  <svg className={css.countryIcon}>\r\n                    <use href={`${svg}#icon-en`} />\r\n                  </svg>\r\n                  English\r\n                </label>\r\n                <input\r\n                  {...register(\"en\")}\r\n                  type=\"text\"\r\n                  id=\"en\"\r\n                  className={css.input}\r\n                />\r\n                {errors.en && (\r\n                  <p className={css.errorInput}>{errors.en.message}</p>\r\n                )}\r\n              </div>\r\n              <div className={css.btnWrapper}>\r\n                <button className={css.btnAdd} type=\"submit\">\r\n                  Add\r\n                </button>\r\n                <button\r\n                  className={css.btnCancel}\r\n                  type=\"button\"\r\n                  onClick={closeModal}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddWord;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"filterContainer\":\"Filters_filterContainer__XQQj5\",\"inputContainer\":\"Filters_inputContainer__zk9Z8\",\"input\":\"Filters_input__IoG5L\",\"icon\":\"Filters_icon__7HTnX\",\"btnWrap\":\"Filters_btnWrap__5ssQ9\",\"visible\":\"Filters_visible__U6fQr\",\"radioContainer\":\"Filters_radioContainer__f+xPC\",\"checkmark\":\"Filters_checkmark__AvlF3\"};","import debounce from \"lodash.debounce\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectCategories } from \"../../redux/word/selectors\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { fetchCategories } from \"../../redux/word/operations\";\r\nimport Dropdown from \"../Dropdown/Dropdown\";\r\nimport css from \"./Filters.module.css\";\r\nimport style from \"../Dropdown/Dropdown.module.css\";\r\nimport svg from \"../../assets/icon.svg\";\r\n\r\nconst Filters = ({ onFilterChange }) => {\r\n  const dispatch = useDispatch();\r\n  const categories = useSelector(selectCategories);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [category, setCategory] = useState(\"all\");\r\n  const [verbType, setVerbType] = useState(\"false\");\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCategories());\r\n  }, [dispatch]);\r\n\r\n  const debounceSearch = useRef(\r\n    debounce((value) => {\r\n      console.log(\"Debounced search with value:\", value);\r\n      onFilterChange({ search: value, category, verbType });\r\n    }, 300)\r\n  ).current;\r\n\r\n  const handleSearchChange = (e) => {\r\n    const value = e.target.value.trim();\r\n    setSearch(value);\r\n    debounceSearch(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (category === \"verb\") {\r\n      onFilterChange({ search, category, verbType });\r\n    }\r\n  }, [verbType]);\r\n\r\n  const handleCategoryChange = (option) => {\r\n    setCategory(option);\r\n    if (option === \"verb\") {\r\n      const defaultVerbType = \"false\";\r\n      setVerbType(defaultVerbType);\r\n      onFilterChange({ search, category: option, verbType: defaultVerbType });\r\n    } else {\r\n      setVerbType(\"\");\r\n      onFilterChange({ search, category: option, verbType: \"\" });\r\n    }\r\n  };\r\n\r\n  const handleVerbTypeChange = (e) => {\r\n    const value = e.target.value;\r\n    setVerbType(value);\r\n\r\n    onFilterChange({ search, category, verbType: value });\r\n\r\n    setTimeout(() => onFilterChange({ search, category, verbType: value }), 0);\r\n  };\r\n\r\n  return (\r\n    <div className={css.filterContainer}>\r\n      <div className={css.inputContainer}>\r\n        <input\r\n          className={css.input}\r\n          type=\"text\"\r\n          value={search}\r\n          onChange={handleSearchChange}\r\n          placeholder=\"Find the word\"\r\n        />\r\n        <svg className={css.icon}>\r\n          <use href={`${svg}#icon-search`} />\r\n        </svg>\r\n      </div>\r\n      <Dropdown\r\n        defaultOption=\"Categories\"\r\n        onSelect={handleCategoryChange}\r\n        options={[\"all\", ...categories]}\r\n        className={style.dropdownFilter}\r\n        dropHeader={style.headerFilter}\r\n        dropList={style.listFilter}\r\n      />\r\n\r\n      <div\r\n        className={css.btnWrap + (category === \"verb\" ? \" \" + css.visible : \"\")}\r\n      >\r\n        <label className={css.radioContainer}>\r\n          Regular\r\n          <input\r\n            type=\"radio\"\r\n            value=\"false\"\r\n            name=\"verbType\"\r\n            checked={verbType === \"false\"}\r\n            onChange={handleVerbTypeChange}\r\n          />\r\n          <span className={css.checkmark}></span>\r\n        </label>\r\n\r\n        <label className={css.radioContainer}>\r\n          Irregular\r\n          <input\r\n            type=\"radio\"\r\n            value=\"true\"\r\n            name=\"verbType\"\r\n            checked={verbType === \"true\"}\r\n            onChange={handleVerbTypeChange}\r\n          />\r\n          <span className={css.checkmark}></span>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Statistics_wrap__lhL1U\",\"title\":\"Statistics_title__8PEVq\",\"count\":\"Statistics_count__BOQ-J\"};","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { getStatistics } from \"../../redux/word/operations\";\r\nimport { selectStatistics } from \"../../redux/word/selectors\";\r\nimport css from \"./Statistics.module.css\";\r\n\r\nconst Statistics = () => {\r\n  const dispatch = useDispatch();\r\n  const statistics = useSelector(selectStatistics);\r\n\r\n  useEffect(() => {\r\n    dispatch(getStatistics());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={css.wrap}>\r\n      <p className={css.title}>To study:</p>\r\n      <span className={css.count}>{statistics}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dashboarContainer\":\"Dashboard_dashboarContainer__WAeNX\",\"infoContainer\":\"Dashboard_infoContainer__5-gp1\",\"btnWrap\":\"Dashboard_btnWrap__e+zYw\",\"link\":\"Dashboard_link__U+TyI\",\"icon\":\"Dashboard_icon__eaXCK\"};","import { Link } from \"react-router-dom\";\r\nimport AddWord from \"../AddWord/AddWord\";\r\nimport Filters from \"../Filters/Filters\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport css from \"./Dashboard.module.css\";\r\nimport svg from \"../..//assets/icon.svg\";\r\n\r\nconst Dashboard = ({ onFilterChange, pageType }) => {\r\n  return (\r\n    <div className={css.dashboarContainer}>\r\n      <Filters onFilterChange={onFilterChange} />\r\n\r\n      <div className={css.infoContainer}>\r\n        <Statistics />\r\n        <div className={css.btnWrap}>\r\n          {pageType === \"dictionary\" && <AddWord />}\r\n          <Link to=\"/training\" className={css.link}>\r\n            Train oneself\r\n            <svg className={css.icon}>\r\n              <use href={`${svg}#icon-arrow-right`} />\r\n            </svg>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDrop\":\"Modal_modalDrop__FlhnE\",\"modalWrap\":\"Modal_modalWrap__3Iud2\",\"btnClose\":\"Modal_btnClose__qOilm\",\"iconClose\":\"Modal_iconClose__nZqE3\"};","import ReactDOM from \"react-dom\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport css from \"./Modal.module.css\";\r\nimport svg from \"../../assets/icon.svg\";\r\n\r\nconst Modal = ({ onClose, children, className }) => {\r\n  const targetElement = document.getElementById(\"modal-root\");\r\n  const backdrop = useRef();\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (event.target === backdrop.current) {\r\n      onClose();\r\n    }\r\n    document.body.style.overflow = \"\";\r\n    document.body.style.position = \"\";\r\n    event.stopPropagation();\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === \"Escape\") {\r\n      document.body.style.overflow = \"\";\r\n      document.body.style.position = \"\";\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const eventHandler = (e) => handleKeyDown(e);\r\n    document.addEventListener(\"keydown\", eventHandler);\r\n    document.body.style.overflow = \"hidden\";\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", eventHandler);\r\n    };\r\n  }, []);\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={css.modalDrop} onClick={handleClickOutside} ref={backdrop}>\r\n      <div className={`${css.modalWrap} ${className}`}>\r\n        <button className={css.btnClose} onClick={onClose}>\r\n          <svg className={css.iconClose}>\r\n            <use href={`${svg}#icon-close`} />\r\n          </svg>\r\n        </button>\r\n        {children}\r\n      </div>\r\n    </div>,\r\n    targetElement\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { CircularProgress, Box } from \"@mui/material\";\r\nimport css from \"./ProgressBar.module.css\";\r\n\r\nconst ProgressBar = ({ progress, pageType, classWrap, classBox, count }) => {\r\n  const isTable = pageType === \"table\";\r\n  const size = isTable ? 24 : 44;\r\n\r\n  return (\r\n    <div className={classWrap}>\r\n      {isTable ? (\r\n        <span className={css.tablePrcent}>{progress}%</span>\r\n      ) : (\r\n        <span className={css.trainPrcent}>{count}</span>\r\n      )}\r\n\r\n      <Box className={classBox} sx={{ width: size, height: size }}>\r\n        <svg width={0} height={0}>\r\n          <defs>\r\n            <linearGradient id=\"my_gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n              <stop offset=\"0%\" stopColor=\"rgb(255, 255, 255)\" />\r\n              <stop offset=\"100%\" stopColor=\"#85AA9F\" />\r\n            </linearGradient>\r\n          </defs>\r\n        </svg>\r\n        <CircularProgress\r\n          variant=\"determinate\"\r\n          value={100}\r\n          size={size}\r\n          thickness={isTable ? 6 : 4}\r\n          sx={{\r\n            color: pageType === \"table\" ? \"#D4F8D3\" : \"#FFFFFF\",\r\n          }}\r\n        />\r\n        <CircularProgress\r\n          variant=\"determinate\"\r\n          value={progress}\r\n          size={size}\r\n          thickness={isTable ? 6 : 4}\r\n          sx={{\r\n            color: \"transparent\",\r\n            position: \"absolute\",\r\n            left: 0,\r\n            top: 0,\r\n            \"svg circle\": {\r\n              stroke: pageType === \"table\" ? \"#2BD627\" : \"url(#my_gradient)\",\r\n              strokeLinecap: \"round\",\r\n            },\r\n          }}\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonArrow\":\"WordsPagination_buttonArrow__PdG-2\",\"btnNumber\":\"WordsPagination_btnNumber__rPXGU\",\"active\":\"WordsPagination_active__6YE7X\",\"paginationContainer\":\"WordsPagination_paginationContainer__k1cBF\"};","import css from \"./WordsPagination.module.css\";\r\nimport svg from \"../../assets/icon.svg\";\r\n\r\nconst WordsPagination = ({ currentPage, totalPages, onPageChange }) => {\r\n  const handleClick = (page) => {\r\n    if (page !== currentPage && page > 0 && page <= totalPages) {\r\n      onPageChange(page);\r\n    }\r\n  };\r\n\r\n  const createPageNumbers = () => {\r\n    let pages = [];\r\n    let key = 0;\r\n\r\n    pages.push(1);\r\n\r\n    if (currentPage > 3) {\r\n      pages.push(`dots-${++key}`);\r\n    }\r\n\r\n    let startPage = Math.max(currentPage - 1, 2);\r\n    let endPage = Math.min(currentPage + 1, totalPages - 1);\r\n\r\n    for (let i = startPage; i <= endPage; i++) {\r\n      pages.push(i);\r\n    }\r\n\r\n    if (currentPage < totalPages - 2) {\r\n      pages.push(`dots-${++key}`);\r\n    }\r\n\r\n    if (totalPages > 1) {\r\n      pages.push(totalPages);\r\n    }\r\n\r\n    return pages;\r\n  };\r\n\r\n  return (\r\n    <div className={css.paginationContainer}>\r\n      <button\r\n        className={css.buttonArrow}\r\n        onClick={() => handleClick(1)}\r\n        disabled={currentPage === 1}\r\n      >\r\n        <svg>\r\n          <use href={`${svg}#icon-pagination-first`} />\r\n        </svg>\r\n      </button>\r\n      <button\r\n        className={css.buttonArrow}\r\n        onClick={() => handleClick(currentPage - 1)}\r\n        disabled={currentPage === 1}\r\n      >\r\n        <svg>\r\n          <use href={`${svg}#icon-pagination-back`} />\r\n        </svg>\r\n      </button>\r\n      {createPageNumbers().map((page, index) =>\r\n        typeof page === \"string\" ? (\r\n          <button key={page} className={css.btnNumber}>\r\n            ...\r\n          </button>\r\n        ) : (\r\n          <button\r\n            key={page}\r\n            className={` ${css.btnNumber}  ${\r\n              page === currentPage ? css.active : \"\"\r\n            }`}\r\n            onClick={() => handleClick(page)}\r\n          >\r\n            {page}\r\n          </button>\r\n        )\r\n      )}\r\n      <button\r\n        className={css.buttonArrow}\r\n        onClick={() => handleClick(currentPage + 1)}\r\n        disabled={currentPage === totalPages}\r\n      >\r\n        <svg>\r\n          <use href={`${svg}#icon-pagination-next`} />\r\n        </svg>\r\n      </button>\r\n      <button\r\n        className={css.buttonArrow}\r\n        onClick={() => handleClick(totalPages)}\r\n        disabled={currentPage === totalPages}\r\n      >\r\n        <svg>\r\n          <use href={`${svg}#icon-pagination-last`} />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WordsPagination;\r\n","import { useDispatch } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { editWord } from \"../../redux/word/operations\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport css from \"../AddWord/AddWord.module.css\";\r\nimport svg from \"../../assets/icon.svg\";\r\n\r\nconst editWordSchema = Yup.object().shape({\r\n  en: Yup.string()\r\n    .trim()\r\n    .required(\"English word is required\")\r\n    .matches(/\\b[A-Za-z'-]+(?:\\s+[A-Za-z'-]+)*\\b/, \"Invalid English format\"),\r\n  ua: Yup.string()\r\n    .trim()\r\n    .required(\"Ukrainian word is required\")\r\n    .matches(/^(?![A-Za-z])[А-ЯІЄЇҐґа-яієїʼ\\s]+$/u, \"Invalid Ukrainian format\"),\r\n});\r\n\r\nconst EditWord = ({ word, onClose }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({ mode: \"onChange\", resolver: yupResolver(editWordSchema) });\r\n\r\n  const onSubmit = (data) => {\r\n    const editedWord = {\r\n      ...data,\r\n      category: word.category,\r\n    };\r\n    if (word.isIrregular !== undefined) {\r\n      editedWord.isIrregular = word.isIrregular;\r\n    }\r\n    console.log(editedWord);\r\n    dispatch(editWord({ wordsId: word._id, data: editedWord }));\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal onClose={onClose}>\r\n      <div className={css.containerFormEdit}>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className={css.inputContainer}>\r\n            <label htmlFor=\"ua\" className={css.label}>\r\n              <svg className={css.countryIcon}>\r\n                <use href={`${svg}#icon-ukraine`} />\r\n              </svg>\r\n              Ukrainian\r\n            </label>\r\n            <input\r\n              {...register(\"ua\")}\r\n              type=\"text\"\r\n              id=\"ua\"\r\n              defaultValue={word.ua}\r\n              className={css.input}\r\n            />\r\n            {errors.ua && <p className={css.error}>{errors.ua.message}</p>}\r\n          </div>\r\n          <div className={css.inputContainer}>\r\n            <label htmlFor=\"en\" className={css.label}>\r\n              <svg className={css.countryIcon}>\r\n                <use href={`${svg}#icon-en`} />\r\n              </svg>\r\n              English\r\n            </label>\r\n            <input\r\n              {...register(\"en\")}\r\n              type=\"text\"\r\n              id=\"en\"\r\n              defaultValue={word.en}\r\n              className={css.input}\r\n            />\r\n            {errors.en && <p className={css.error}>{errors.en.message}</p>}\r\n          </div>\r\n          <div className={css.btnWrapper}>\r\n            <button className={css.btnAdd} type=\"submit\">\r\n              Save\r\n            </button>\r\n            <button className={css.btnCancel} type=\"button\" onClick={onClose}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditWord;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"WordMenu_button__efx4b\",\"wrap\":\"WordMenu_wrap__Gj30w\",\"icon\":\"WordMenu_icon__dyMyc\",\"btnWrap\":\"WordMenu_btnWrap__R+ell\",\"menuBtn\":\"WordMenu_menuBtn__7G8cY\",\"menuIcon\":\"WordMenu_menuIcon__-f06f\"};","import { useState } from \"react\";\r\nimport Popover from \"@mui/material/Popover\";\r\nimport EditWord from \"../EditWord/EditWord\";\r\nimport svg from \"../../assets/icon.svg\";\r\nimport css from \"./WordMenu.module.css\";\r\n\r\nconst WordMenu = ({ word, handleActions }) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [openEditModal, setEditModalOpen] = useState(false);\r\n\r\n  const closeEditModal = () => {\r\n    setEditModalOpen(false);\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    console.log(word._id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    handleActions(word, \"edit\");\r\n    setEditModalOpen(true);\r\n    handleClose();\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    handleActions(word, \"delete\");\r\n    handleClose();\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"word-menu-popover\" : undefined;\r\n\r\n  return (\r\n    <div className={css.wrap}>\r\n      <button\r\n        aria-describedby={id}\r\n        onClick={handleClick}\r\n        className={css.button}\r\n      >\r\n        <svg className={css.icon}>\r\n          <use href={`${svg}#icon-dots`} />\r\n        </svg>\r\n      </button>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\",\r\n        }}\r\n        sx={{\r\n          \".MuiPaper-root\": {\r\n            borderRadius: \"15px\",\r\n            boxShadow: \"0px 4px 47px 0px rgba(18, 20, 23, 0.08)\",\r\n            backgroundColor: \"#ffffff\",\r\n          },\r\n        }}\r\n      >\r\n        <div className={css.btnWrap}>\r\n          <button onClick={handleEdit} className={css.menuBtn}>\r\n            <svg className={css.menuIcon}>\r\n              <use href={`${svg}#icon-pen`} />\r\n            </svg>\r\n            Edit\r\n          </button>\r\n          <button onClick={handleDelete} className={css.menuBtn}>\r\n            <svg className={css.menuIcon}>\r\n              <use href={`${svg}#icon-trash`} />\r\n            </svg>\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Popover>\r\n      {openEditModal && <EditWord word={word} onClose={closeEditModal} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WordMenu;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tableContainer\":\"WordsTable_tableContainer__oO9Sw\",\"table\":\"WordsTable_table__V239A\",\"tableHeader\":\"WordsTable_tableHeader__vamlj\",\"tableItem\":\"WordsTable_tableItem__5VmJs\",\"iconCountry\":\"WordsTable_iconCountry__C-raV\",\"buttonAdd\":\"WordsTable_buttonAdd__P905m\",\"iconAdd\":\"WordsTable_iconAdd__MC117\"};","import { useTable } from \"react-table\";\r\nimport { useMemo } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { useIsMobile } from \"../../hooks/useIsMobile\";\r\nimport WordMenu from \"../WordMenu/WordMenu\";\r\nimport ProgressBar from \"../ProgressBar/ProgressBar\";\r\nimport svg from \"../../assets/icon.svg\";\r\nimport css from \"./WordsTable.module.css\";\r\nimport style from \"../ProgressBar/ProgressBar.module.css\";\r\n\r\nconst WordsTable = ({ words, handleActions, actionType }) => {\r\n  const isMobile = useIsMobile();\r\n\r\n  const data = useMemo(() => words, [words]);\r\n\r\n  const columns = useMemo(() => {\r\n    const baseColumns = [\r\n      {\r\n        Header: () => (\r\n          <span>\r\n            Word{\" \"}\r\n            <svg className={css.iconCountry}>\r\n              <use href={`${svg}#icon-en`} />\r\n            </svg>\r\n          </span>\r\n        ),\r\n        accessor: \"en\",\r\n      },\r\n      {\r\n        Header: () => (\r\n          <span>\r\n            Translation{\" \"}\r\n            <svg className={css.iconCountry}>\r\n              <use href={`${svg}#icon-ukraine`} />\r\n            </svg>\r\n          </span>\r\n        ),\r\n        accessor: \"ua\",\r\n        className: \"columnTranslation\",\r\n      },\r\n    ];\r\n    if (!isMobile || actionType === \"recommend\") {\r\n      baseColumns.push({\r\n        Header: \"Category\",\r\n        accessor: \"category\",\r\n      });\r\n    }\r\n\r\n    if (actionType === \"dictionary\") {\r\n      baseColumns.push({\r\n        Header: \"Progress\",\r\n        accessor: \"progress\",\r\n\r\n        Cell: ({ row }) => {\r\n          return (\r\n            <ProgressBar\r\n              progress={row.original.progress}\r\n              pageType=\"table\"\r\n              classWrap={style.progressWrapTable}\r\n              classBox={style.boxTable}\r\n            />\r\n          );\r\n        },\r\n      });\r\n    }\r\n\r\n    baseColumns.push({\r\n      accessor: \"actions\",\r\n\r\n      Cell: ({ row }) => {\r\n        if (actionType === \"dictionary\") {\r\n          return <WordMenu word={row.original} handleActions={handleActions} />;\r\n        } else if (actionType === \"recommend\") {\r\n          return (\r\n            <button\r\n              onClick={() => handleActions(row.original, \"add\")}\r\n              className={css.buttonAdd}\r\n            >\r\n              <span>Add to dictionary</span>\r\n              <svg className={css.iconAdd}>\r\n                <use href={`${svg}#icon-arrow-right`} />\r\n              </svg>\r\n            </button>\r\n          );\r\n        }\r\n        return null;\r\n      },\r\n    });\r\n\r\n    return baseColumns;\r\n  }, [handleActions, actionType, isMobile]);\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable({ columns, data });\r\n\r\n  return (\r\n    <div className={css.tableContainer}>\r\n      <table {...getTableProps()} className={css.table}>\r\n        <thead className={css.thead}>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()} key={nanoid()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th\r\n                  {...column.getHeaderProps()}\r\n                  key={column.id}\r\n                  className={css.tableHeader}\r\n                >\r\n                  {column.render(\"Header\")}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()} key={row.id}>\r\n                {row.cells.map((cell) => (\r\n                  <td\r\n                    {...cell.getCellProps()}\r\n                    key={cell.column.id}\r\n                    className={css.tableItem}\r\n                  >\r\n                    {cell.render(\"Cell\")}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WordsTable;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useIsMobile = () => {\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsMobile(window.innerWidth < 768);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n  return isMobile;\r\n};\r\n","export const selectCategories = (state) => state.words.categories;\r\nexport const selectWords = (state) => state.words.words;\r\nexport const selectOwnWords = (state) => state.words.ownWords;\r\nexport const selectTotalPages = (state) => state.words.totalPages;\r\nexport const selectError = (state) => state.words.error;\r\nexport const selectIsLoading = (state) => state.words.isLoading;\r\nexport const selectStatistics = (state) => state.words.statistics;\r\nexport const selectTasks = (state) => state.words.tasks;\r\nexport const selectAnswer = (state) => state.words.result;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"AddWord_button__-kYA2\",\"iconPlus\":\"AddWord_iconPlus__xF-Qi\",\"containerForm\":\"AddWord_containerForm__bOtEE\",\"containerFormEdit\":\"AddWord_containerFormEdit__bCqMW\",\"title\":\"AddWord_title__GN5KT\",\"subtitle\":\"AddWord_subtitle__jGTij\",\"label\":\"AddWord_label__-vGX6\",\"countryIcon\":\"AddWord_countryIcon__iO75M\",\"inputContainer\":\"AddWord_inputContainer__FvmAe\",\"input\":\"AddWord_input__Pd1Wc\",\"btnWrapper\":\"AddWord_btnWrapper__j-IbX\",\"btnAdd\":\"AddWord_btnAdd__lokBt\",\"btnCancel\":\"AddWord_btnCancel__LtaUL\",\"categoryWrap\":\"AddWord_categoryWrap__w2vwL\",\"errorCategory\":\"AddWord_errorCategory__7yjW6\",\"errorInput\":\"AddWord_errorInput__L1qvJ\",\"notificationRadio\":\"AddWord_notificationRadio__8vTvn\",\"visible\":\"AddWord_visible__O7osk\",\"errorRadio\":\"AddWord_errorRadio__9mb4c\",\"btnWrap\":\"AddWord_btnWrap__e28I-\",\"radioContainer\":\"AddWord_radioContainer__lpk3M\",\"checkmark\":\"AddWord_checkmark__OCTCk\"};","// extracted by mini-css-extract-plugin\nexport default {\"progressWrapTable\":\"ProgressBar_progressWrapTable__JdnC7\",\"progressWrapTrain\":\"ProgressBar_progressWrapTrain__pc96x\",\"boxTable\":\"ProgressBar_boxTable__k7NF1\",\"boxTrain\":\"ProgressBar_boxTrain__umwOE\",\"trainPrcent\":\"ProgressBar_trainPrcent__EQ0KO\",\"tablePrcent\":\"ProgressBar_tablePrcent__LmfRr\"};"],"names":["_ref","defaultOption","onSelect","options","className","dropHeader","dropList","dropdownRef","useRef","isOpen","setIsOpen","useState","selectedOption","setSelectedOption","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","upperCaseFirstLetter","text","charAt","toUpperCase","slice","toLowerCase","_jsxs","ref","children","onClick","_jsx","href","concat","svg","map","option","handleSelectOption","wordSchema","Yup","shape","en","trim","required","when","is","category","isIrregular","then","schema","matches","otherwise","ua","value","notRequired","AddWord","dispatch","useDispatch","categories","useSelector","selectCategories","modalOpen","setModalOpen","selectedCategory","setSelectedCategory","register","handleSubmit","setValue","watch","formState","errors","useForm","mode","resolver","yupResolver","closeModal","_Fragment","type","handleClick","css","button","iconPlus","Modal","onClose","containerForm","title","subtitle","onSubmit","data","newWord","createWord","unwrap","catch","error","alert","message","categoryWrap","Dropdown","filter","cat","style","errorCategory","btnWrap","visible","radioContainer","checkmark","errorRadio","notificationRadio","inputContainer","htmlFor","label","countryIcon","id","input","errorInput","btnWrapper","btnAdd","btnCancel","onFilterChange","search","setSearch","setCategory","verbType","setVerbType","fetchCategories","debounceSearch","debounce","console","log","handleVerbTypeChange","e","setTimeout","onChange","placeholder","defaultVerbType","name","checked","Statistics","statistics","selectStatistics","getStatistics","pageType","Filters","Link","to","targetElement","getElementById","backdrop","eventHandler","key","body","overflow","position","ReactDOM","stopPropagation","progress","classWrap","classBox","count","isTable","size","tablePrcent","trainPrcent","Box","sx","width","height","x1","y1","x2","y2","offset","stopColor","CircularProgress","variant","thickness","color","left","top","stroke","strokeLinecap","currentPage","totalPages","onPageChange","page","disabled","createPageNumbers","pages","push","startPage","Math","max","endPage","min","i","index","editWordSchema","word","containerFormEdit","editedWord","undefined","editWord","wordsId","_id","defaultValue","handleActions","anchorEl","setAnchorEl","openEditModal","setEditModalOpen","handleClose","open","Boolean","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","borderRadius","boxShadow","backgroundColor","handleEdit","handleDelete","EditWord","closeEditModal","words","actionType","isMobile","useIsMobile","setIsMobile","window","innerWidth","handleResize","useMemo","columns","baseColumns","Header","iconCountry","accessor","Cell","_ref2","row","ProgressBar","original","progressWrapTable","boxTable","_ref3","WordMenu","buttonAdd","iconAdd","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useTable","tableContainer","table","thead","headerGroup","_createElement","getHeaderGroupProps","nanoid","headers","column","getHeaderProps","tableHeader","render","getRowProps","cells","cell","getCellProps","tableItem","state","selectWords","selectOwnWords","ownWords","selectTotalPages","selectTasks","tasks","selectAnswer","result"],"sourceRoot":""}